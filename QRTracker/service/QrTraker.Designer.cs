//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("QrTrakerModel", "FK_Documents_DocTypes", "DocTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(QRTracker.service.DocType), "Documents", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(QRTracker.service.Document), true)]
[assembly: EdmRelationshipAttribute("QrTrakerModel", "FK_Roles_DocTypes", "DocTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(QRTracker.service.DocType), "Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(QRTracker.service.Role), true)]
[assembly: EdmRelationshipAttribute("QrTrakerModel", "FK_Tracks_Documents", "Documents", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(QRTracker.service.Document), "Tracks", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(QRTracker.service.Track), true)]
[assembly: EdmRelationshipAttribute("QrTrakerModel", "FK_Rights_Roles", "Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(QRTracker.service.Role), "Rights", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(QRTracker.service.Right), true)]
[assembly: EdmRelationshipAttribute("QrTrakerModel", "FK_Rights_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(QRTracker.service.User), "Rights", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(QRTracker.service.Right), true)]
[assembly: EdmRelationshipAttribute("QrTrakerModel", "FK_Roles_Statuses1", "Statuses", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(QRTracker.service.Status), "Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(QRTracker.service.Role), true)]
[assembly: EdmRelationshipAttribute("QrTrakerModel", "FK_Tracks_Statuses", "Statuses", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(QRTracker.service.Status), "Tracks", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(QRTracker.service.Track), true)]
[assembly: EdmRelationshipAttribute("QrTrakerModel", "FK_Tracks_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(QRTracker.service.User), "Tracks", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(QRTracker.service.Track), true)]

#endregion

namespace QRTracker.service
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class QrTrakerEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new QrTrakerEntities object using the connection string found in the 'QrTrakerEntities' section of the application configuration file.
        /// </summary>
        public QrTrakerEntities() : base("name=QrTrakerEntities", "QrTrakerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new QrTrakerEntities object.
        /// </summary>
        public QrTrakerEntities(string connectionString) : base(connectionString, "QrTrakerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new QrTrakerEntities object.
        /// </summary>
        public QrTrakerEntities(EntityConnection connection) : base(connection, "QrTrakerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DocType> DocTypes
        {
            get
            {
                if ((_DocTypes == null))
                {
                    _DocTypes = base.CreateObjectSet<DocType>("DocTypes");
                }
                return _DocTypes;
            }
        }
        private ObjectSet<DocType> _DocTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Document> Documents
        {
            get
            {
                if ((_Documents == null))
                {
                    _Documents = base.CreateObjectSet<Document>("Documents");
                }
                return _Documents;
            }
        }
        private ObjectSet<Document> _Documents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ResultText> ResultTexts
        {
            get
            {
                if ((_ResultTexts == null))
                {
                    _ResultTexts = base.CreateObjectSet<ResultText>("ResultTexts");
                }
                return _ResultTexts;
            }
        }
        private ObjectSet<ResultText> _ResultTexts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Right> Rights
        {
            get
            {
                if ((_Rights == null))
                {
                    _Rights = base.CreateObjectSet<Right>("Rights");
                }
                return _Rights;
            }
        }
        private ObjectSet<Right> _Rights;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Status> Statuses
        {
            get
            {
                if ((_Statuses == null))
                {
                    _Statuses = base.CreateObjectSet<Status>("Statuses");
                }
                return _Statuses;
            }
        }
        private ObjectSet<Status> _Statuses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Track> Tracks
        {
            get
            {
                if ((_Tracks == null))
                {
                    _Tracks = base.CreateObjectSet<Track>("Tracks");
                }
                return _Tracks;
            }
        }
        private ObjectSet<Track> _Tracks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Detail> Details
        {
            get
            {
                if ((_Details == null))
                {
                    _Details = base.CreateObjectSet<Detail>("Details");
                }
                return _Details;
            }
        }
        private ObjectSet<Detail> _Details;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DocTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDocTypes(DocType docType)
        {
            base.AddObject("DocTypes", docType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Documents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDocuments(Document document)
        {
            base.AddObject("Documents", document);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ResultTexts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResultTexts(ResultText resultText)
        {
            base.AddObject("ResultTexts", resultText);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Rights EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRights(Right right)
        {
            base.AddObject("Rights", right);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Statuses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStatuses(Status status)
        {
            base.AddObject("Statuses", status);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tracks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTracks(Track track)
        {
            base.AddObject("Tracks", track);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Details EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDetails(Detail detail)
        {
            base.AddObject("Details", detail);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QrTrakerModel", Name="Detail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Detail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Detail object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="docNum">Initial value of the docNum property.</param>
        /// <param name="docType">Initial value of the docType property.</param>
        /// <param name="userName">Initial value of the userName property.</param>
        /// <param name="statuses">Initial value of the statuses property.</param>
        /// <param name="statDate">Initial value of the statDate property.</param>
        public static Detail CreateDetail(global::System.Int32 id, global::System.String docNum, global::System.String docType, global::System.String userName, global::System.String statuses, global::System.DateTime statDate)
        {
            Detail detail = new Detail();
            detail.id = id;
            detail.docNum = docNum;
            detail.docType = docType;
            detail.userName = userName;
            detail.statuses = statuses;
            detail.statDate = statDate;
            return detail;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String docNum
        {
            get
            {
                return _docNum;
            }
            set
            {
                if (_docNum != value)
                {
                    OndocNumChanging(value);
                    ReportPropertyChanging("docNum");
                    _docNum = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("docNum");
                    OndocNumChanged();
                }
            }
        }
        private global::System.String _docNum;
        partial void OndocNumChanging(global::System.String value);
        partial void OndocNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String docType
        {
            get
            {
                return _docType;
            }
            set
            {
                if (_docType != value)
                {
                    OndocTypeChanging(value);
                    ReportPropertyChanging("docType");
                    _docType = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("docType");
                    OndocTypeChanged();
                }
            }
        }
        private global::System.String _docType;
        partial void OndocTypeChanging(global::System.String value);
        partial void OndocTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String userName
        {
            get
            {
                return _userName;
            }
            set
            {
                if (_userName != value)
                {
                    OnuserNameChanging(value);
                    ReportPropertyChanging("userName");
                    _userName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("userName");
                    OnuserNameChanged();
                }
            }
        }
        private global::System.String _userName;
        partial void OnuserNameChanging(global::System.String value);
        partial void OnuserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String statuses
        {
            get
            {
                return _statuses;
            }
            set
            {
                if (_statuses != value)
                {
                    OnstatusesChanging(value);
                    ReportPropertyChanging("statuses");
                    _statuses = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("statuses");
                    OnstatusesChanged();
                }
            }
        }
        private global::System.String _statuses;
        partial void OnstatusesChanging(global::System.String value);
        partial void OnstatusesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime statDate
        {
            get
            {
                return _statDate;
            }
            set
            {
                if (_statDate != value)
                {
                    OnstatDateChanging(value);
                    ReportPropertyChanging("statDate");
                    _statDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("statDate");
                    OnstatDateChanged();
                }
            }
        }
        private global::System.DateTime _statDate;
        partial void OnstatDateChanging(global::System.DateTime value);
        partial void OnstatDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> posted
        {
            get
            {
                return _posted;
            }
            set
            {
                OnpostedChanging(value);
                ReportPropertyChanging("posted");
                _posted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("posted");
                OnpostedChanged();
            }
        }
        private Nullable<global::System.DateTime> _posted;
        partial void OnpostedChanging(Nullable<global::System.DateTime> value);
        partial void OnpostedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> deleted
        {
            get
            {
                return _deleted;
            }
            set
            {
                OndeletedChanging(value);
                ReportPropertyChanging("deleted");
                _deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("deleted");
                OndeletedChanged();
            }
        }
        private Nullable<global::System.DateTime> _deleted;
        partial void OndeletedChanging(Nullable<global::System.DateTime> value);
        partial void OndeletedChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QrTrakerModel", Name="DocType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DocType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DocType object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        public static DocType CreateDocType(global::System.Int32 id, global::System.String name)
        {
            DocType docType = new DocType();
            docType.id = id;
            docType.name = name;
            return docType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QrTrakerModel", "FK_Documents_DocTypes", "Documents")]
        public EntityCollection<Document> Documents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Document>("QrTrakerModel.FK_Documents_DocTypes", "Documents");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Document>("QrTrakerModel.FK_Documents_DocTypes", "Documents", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QrTrakerModel", "FK_Roles_DocTypes", "Roles")]
        public EntityCollection<Role> Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Role>("QrTrakerModel.FK_Roles_DocTypes", "Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Role>("QrTrakerModel.FK_Roles_DocTypes", "Roles", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QrTrakerModel", Name="Document")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Document : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Document object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="docNum">Initial value of the docNum property.</param>
        /// <param name="typeId">Initial value of the typeId property.</param>
        public static Document CreateDocument(global::System.Int32 id, global::System.String docNum, global::System.Int32 typeId)
        {
            Document document = new Document();
            document.id = id;
            document.docNum = docNum;
            document.typeId = typeId;
            return document;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String docNum
        {
            get
            {
                return _docNum;
            }
            set
            {
                OndocNumChanging(value);
                ReportPropertyChanging("docNum");
                _docNum = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("docNum");
                OndocNumChanged();
            }
        }
        private global::System.String _docNum;
        partial void OndocNumChanging(global::System.String value);
        partial void OndocNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 typeId
        {
            get
            {
                return _typeId;
            }
            set
            {
                OntypeIdChanging(value);
                ReportPropertyChanging("typeId");
                _typeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("typeId");
                OntypeIdChanged();
            }
        }
        private global::System.Int32 _typeId;
        partial void OntypeIdChanging(global::System.Int32 value);
        partial void OntypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> deleted
        {
            get
            {
                return _deleted;
            }
            set
            {
                OndeletedChanging(value);
                ReportPropertyChanging("deleted");
                _deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("deleted");
                OndeletedChanged();
            }
        }
        private Nullable<global::System.DateTime> _deleted;
        partial void OndeletedChanging(Nullable<global::System.DateTime> value);
        partial void OndeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> posted
        {
            get
            {
                return _posted;
            }
            set
            {
                OnpostedChanging(value);
                ReportPropertyChanging("posted");
                _posted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("posted");
                OnpostedChanged();
            }
        }
        private Nullable<global::System.DateTime> _posted;
        partial void OnpostedChanging(Nullable<global::System.DateTime> value);
        partial void OnpostedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String hash
        {
            get
            {
                return _hash;
            }
            set
            {
                OnhashChanging(value);
                ReportPropertyChanging("hash");
                _hash = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("hash");
                OnhashChanged();
            }
        }
        private global::System.String _hash;
        partial void OnhashChanging(global::System.String value);
        partial void OnhashChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QrTrakerModel", "FK_Documents_DocTypes", "DocTypes")]
        public DocType DocType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocType>("QrTrakerModel.FK_Documents_DocTypes", "DocTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocType>("QrTrakerModel.FK_Documents_DocTypes", "DocTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DocType> DocTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocType>("QrTrakerModel.FK_Documents_DocTypes", "DocTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DocType>("QrTrakerModel.FK_Documents_DocTypes", "DocTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QrTrakerModel", "FK_Tracks_Documents", "Tracks")]
        public EntityCollection<Track> Tracks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Track>("QrTrakerModel.FK_Tracks_Documents", "Tracks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Track>("QrTrakerModel.FK_Tracks_Documents", "Tracks", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QrTrakerModel", Name="ResultText")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ResultText : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ResultText object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="success">Initial value of the success property.</param>
        public static ResultText CreateResultText(global::System.String id, global::System.Boolean success)
        {
            ResultText resultText = new ResultText();
            resultText.id = id;
            resultText.success = success;
            return resultText;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.String _id;
        partial void OnidChanging(global::System.String value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String text
        {
            get
            {
                return _text;
            }
            set
            {
                OntextChanging(value);
                ReportPropertyChanging("text");
                _text = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("text");
                OntextChanged();
            }
        }
        private global::System.String _text;
        partial void OntextChanging(global::System.String value);
        partial void OntextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean success
        {
            get
            {
                return _success;
            }
            set
            {
                OnsuccessChanging(value);
                ReportPropertyChanging("success");
                _success = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("success");
                OnsuccessChanged();
            }
        }
        private global::System.Boolean _success;
        partial void OnsuccessChanging(global::System.Boolean value);
        partial void OnsuccessChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QrTrakerModel", Name="Right")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Right : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Right object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="userId">Initial value of the userId property.</param>
        /// <param name="roleId">Initial value of the roleId property.</param>
        public static Right CreateRight(global::System.Int32 id, global::System.Int32 userId, global::System.Int32 roleId)
        {
            Right right = new Right();
            right.id = id;
            right.userId = userId;
            right.roleId = roleId;
            return right;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 userId
        {
            get
            {
                return _userId;
            }
            set
            {
                OnuserIdChanging(value);
                ReportPropertyChanging("userId");
                _userId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("userId");
                OnuserIdChanged();
            }
        }
        private global::System.Int32 _userId;
        partial void OnuserIdChanging(global::System.Int32 value);
        partial void OnuserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 roleId
        {
            get
            {
                return _roleId;
            }
            set
            {
                OnroleIdChanging(value);
                ReportPropertyChanging("roleId");
                _roleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("roleId");
                OnroleIdChanged();
            }
        }
        private global::System.Int32 _roleId;
        partial void OnroleIdChanging(global::System.Int32 value);
        partial void OnroleIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QrTrakerModel", "FK_Rights_Roles", "Roles")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("QrTrakerModel.FK_Rights_Roles", "Roles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("QrTrakerModel.FK_Rights_Roles", "Roles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("QrTrakerModel.FK_Rights_Roles", "Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("QrTrakerModel.FK_Rights_Roles", "Roles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QrTrakerModel", "FK_Rights_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("QrTrakerModel.FK_Rights_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("QrTrakerModel.FK_Rights_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("QrTrakerModel.FK_Rights_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("QrTrakerModel.FK_Rights_Users", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QrTrakerModel", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="statusId">Initial value of the statusId property.</param>
        /// <param name="docTypeId">Initial value of the docTypeId property.</param>
        /// <param name="name">Initial value of the name property.</param>
        public static Role CreateRole(global::System.Int32 id, global::System.Int32 statusId, global::System.Int32 docTypeId, global::System.String name)
        {
            Role role = new Role();
            role.id = id;
            role.statusId = statusId;
            role.docTypeId = docTypeId;
            role.name = name;
            return role;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 statusId
        {
            get
            {
                return _statusId;
            }
            set
            {
                OnstatusIdChanging(value);
                ReportPropertyChanging("statusId");
                _statusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("statusId");
                OnstatusIdChanged();
            }
        }
        private global::System.Int32 _statusId;
        partial void OnstatusIdChanging(global::System.Int32 value);
        partial void OnstatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 docTypeId
        {
            get
            {
                return _docTypeId;
            }
            set
            {
                OndocTypeIdChanging(value);
                ReportPropertyChanging("docTypeId");
                _docTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("docTypeId");
                OndocTypeIdChanged();
            }
        }
        private global::System.Int32 _docTypeId;
        partial void OndocTypeIdChanging(global::System.Int32 value);
        partial void OndocTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QrTrakerModel", "FK_Roles_DocTypes", "DocTypes")]
        public DocType DocType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocType>("QrTrakerModel.FK_Roles_DocTypes", "DocTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocType>("QrTrakerModel.FK_Roles_DocTypes", "DocTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DocType> DocTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocType>("QrTrakerModel.FK_Roles_DocTypes", "DocTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DocType>("QrTrakerModel.FK_Roles_DocTypes", "DocTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QrTrakerModel", "FK_Rights_Roles", "Rights")]
        public EntityCollection<Right> Rights
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Right>("QrTrakerModel.FK_Rights_Roles", "Rights");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Right>("QrTrakerModel.FK_Rights_Roles", "Rights", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QrTrakerModel", "FK_Roles_Statuses1", "Statuses")]
        public Status Status
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Status>("QrTrakerModel.FK_Roles_Statuses1", "Statuses").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Status>("QrTrakerModel.FK_Roles_Statuses1", "Statuses").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Status> StatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Status>("QrTrakerModel.FK_Roles_Statuses1", "Statuses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Status>("QrTrakerModel.FK_Roles_Statuses1", "Statuses", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QrTrakerModel", Name="Status")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Status : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Status object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        public static Status CreateStatus(global::System.Int32 id, global::System.String name)
        {
            Status status = new Status();
            status.id = id;
            status.name = name;
            return status;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QrTrakerModel", "FK_Roles_Statuses1", "Roles")]
        public EntityCollection<Role> Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Role>("QrTrakerModel.FK_Roles_Statuses1", "Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Role>("QrTrakerModel.FK_Roles_Statuses1", "Roles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QrTrakerModel", "FK_Tracks_Statuses", "Tracks")]
        public EntityCollection<Track> Tracks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Track>("QrTrakerModel.FK_Tracks_Statuses", "Tracks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Track>("QrTrakerModel.FK_Tracks_Statuses", "Tracks", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QrTrakerModel", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagram object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QrTrakerModel", Name="Track")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Track : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Track object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="docId">Initial value of the docId property.</param>
        /// <param name="statId">Initial value of the statId property.</param>
        /// <param name="userId">Initial value of the userId property.</param>
        /// <param name="statDate">Initial value of the statDate property.</param>
        public static Track CreateTrack(global::System.Int32 id, global::System.Int32 docId, global::System.Int32 statId, global::System.Int32 userId, global::System.DateTime statDate)
        {
            Track track = new Track();
            track.id = id;
            track.docId = docId;
            track.statId = statId;
            track.userId = userId;
            track.statDate = statDate;
            return track;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 docId
        {
            get
            {
                return _docId;
            }
            set
            {
                OndocIdChanging(value);
                ReportPropertyChanging("docId");
                _docId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("docId");
                OndocIdChanged();
            }
        }
        private global::System.Int32 _docId;
        partial void OndocIdChanging(global::System.Int32 value);
        partial void OndocIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 statId
        {
            get
            {
                return _statId;
            }
            set
            {
                OnstatIdChanging(value);
                ReportPropertyChanging("statId");
                _statId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("statId");
                OnstatIdChanged();
            }
        }
        private global::System.Int32 _statId;
        partial void OnstatIdChanging(global::System.Int32 value);
        partial void OnstatIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 userId
        {
            get
            {
                return _userId;
            }
            set
            {
                OnuserIdChanging(value);
                ReportPropertyChanging("userId");
                _userId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("userId");
                OnuserIdChanged();
            }
        }
        private global::System.Int32 _userId;
        partial void OnuserIdChanging(global::System.Int32 value);
        partial void OnuserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime statDate
        {
            get
            {
                return _statDate;
            }
            set
            {
                OnstatDateChanging(value);
                ReportPropertyChanging("statDate");
                _statDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("statDate");
                OnstatDateChanged();
            }
        }
        private global::System.DateTime _statDate;
        partial void OnstatDateChanging(global::System.DateTime value);
        partial void OnstatDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> deleted
        {
            get
            {
                return _deleted;
            }
            set
            {
                OndeletedChanging(value);
                ReportPropertyChanging("deleted");
                _deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("deleted");
                OndeletedChanged();
            }
        }
        private Nullable<global::System.DateTime> _deleted;
        partial void OndeletedChanging(Nullable<global::System.DateTime> value);
        partial void OndeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> posted
        {
            get
            {
                return _posted;
            }
            set
            {
                OnpostedChanging(value);
                ReportPropertyChanging("posted");
                _posted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("posted");
                OnpostedChanged();
            }
        }
        private Nullable<global::System.DateTime> _posted;
        partial void OnpostedChanging(Nullable<global::System.DateTime> value);
        partial void OnpostedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QrTrakerModel", "FK_Tracks_Documents", "Documents")]
        public Document Document
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Document>("QrTrakerModel.FK_Tracks_Documents", "Documents").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Document>("QrTrakerModel.FK_Tracks_Documents", "Documents").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Document> DocumentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Document>("QrTrakerModel.FK_Tracks_Documents", "Documents");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Document>("QrTrakerModel.FK_Tracks_Documents", "Documents", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QrTrakerModel", "FK_Tracks_Statuses", "Statuses")]
        public Status Status
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Status>("QrTrakerModel.FK_Tracks_Statuses", "Statuses").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Status>("QrTrakerModel.FK_Tracks_Statuses", "Statuses").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Status> StatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Status>("QrTrakerModel.FK_Tracks_Statuses", "Statuses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Status>("QrTrakerModel.FK_Tracks_Statuses", "Statuses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QrTrakerModel", "FK_Tracks_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("QrTrakerModel.FK_Tracks_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("QrTrakerModel.FK_Tracks_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("QrTrakerModel.FK_Tracks_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("QrTrakerModel.FK_Tracks_Users", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QrTrakerModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="isViewer">Initial value of the isViewer property.</param>
        /// <param name="isManager">Initial value of the isManager property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String name, global::System.Boolean isViewer, global::System.Boolean isManager)
        {
            User user = new User();
            user.id = id;
            user.name = name;
            user.isViewer = isViewer;
            user.isManager = isManager;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isViewer
        {
            get
            {
                return _isViewer;
            }
            set
            {
                OnisViewerChanging(value);
                ReportPropertyChanging("isViewer");
                _isViewer = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isViewer");
                OnisViewerChanged();
            }
        }
        private global::System.Boolean _isViewer;
        partial void OnisViewerChanging(global::System.Boolean value);
        partial void OnisViewerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isManager
        {
            get
            {
                return _isManager;
            }
            set
            {
                OnisManagerChanging(value);
                ReportPropertyChanging("isManager");
                _isManager = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isManager");
                OnisManagerChanged();
            }
        }
        private global::System.Boolean _isManager;
        partial void OnisManagerChanging(global::System.Boolean value);
        partial void OnisManagerChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QrTrakerModel", "FK_Rights_Users", "Rights")]
        public EntityCollection<Right> Rights
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Right>("QrTrakerModel.FK_Rights_Users", "Rights");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Right>("QrTrakerModel.FK_Rights_Users", "Rights", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QrTrakerModel", "FK_Tracks_Users", "Tracks")]
        public EntityCollection<Track> Tracks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Track>("QrTrakerModel.FK_Tracks_Users", "Tracks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Track>("QrTrakerModel.FK_Tracks_Users", "Tracks", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
